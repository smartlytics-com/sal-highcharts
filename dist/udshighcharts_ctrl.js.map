{"version":3,"sources":["../src/udshighcharts_ctrl.js"],"names":["MetricsPanelCtrl","_","Highcharts","addMore","theme","setOptions","panelDefaults","bgColor","labels","title","subtitle","x_legend","y_legend","chart","type","animation_duration","postprocess","accumulate","fields","x_label","y_label","name_label","UdsHighChartsCtrl","$scope","$injector","$rootScope","defaultsDeep","panel","graphTypes","text","value","events","on","onInitEditMode","bind","onPanelTeardown","render","onRender","onDataReceived","onDataError","data","canvasid","Math","random","replace","divid","ctx","ready","updateChart","series","document","getElementById","getContext","plotBorderWidth","zoomType","legend","enabled","show","tooltip","useHTML","headerFormat","pointFormat","footerFormat","followPointer","yAxis","min","xAxis","plotOptions","dataLabels","format","animation","duration","line","enableMouseTracking","trim","x","y","z","name","country","setData","length","remove","i","addSeries","redraw","fulldata","dataList","bubbleData","chartData","new_data","values","columns","rows","forEach","row","push","JSON","parse","newValues","sum","r","entry","e","console","log","addEditorTab","$timeout","cancel","nextTickPromise","templateUrl"],"mappings":"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","file":"udshighcharts_ctrl.js","sourcesContent":["import {\n  MetricsPanelCtrl,\n}\nfrom 'app/plugins/sdk';\nimport _ from 'lodash';\nimport './css/udshighcharts-panel.css!';\nimport Highcharts from './highcharts/highcharts.js';\nimport addMore from './highcharts/highcharts-more.js';\naddMore(Highcharts);\nimport theme from './highcharts/dark-blue.js';\nHighcharts.setOptions(theme);\n\nconst panelDefaults = {\n  bgColor: null,\n\n  labels: {\n    title: null,\n    subtitle: null,\n    x_legend: null,\n    y_legend: null\n  },\n\n  chart: {\n    type: 'bubble', //bubble, line\n    animation_duration: 0,\n  },\n\n  postprocess: {\n    accumulate: false,\n  },\n\n  fields: {\n    x_label: null,\n    y_label: null,\n    name_label: null,\n  }\n\n};\n\nexport class UdsHighChartsCtrl extends MetricsPanelCtrl {\n\n\n  constructor($scope, $injector, $rootScope) {\n    super($scope, $injector);\n    _.defaultsDeep(this.panel, panelDefaults);\n\n    this.graphTypes = [\n        { text: 'Area', value: 'area' },\n        { text: 'Area Range', value: 'arearange' },\n        { text: 'Area Spline', value: 'areaspline' },\n        { text: 'Bar', value: 'bar' },\n        { text: 'Bellcurve', value: 'bellcurve' },\n        { text: 'Boxplot', value: 'boxplot' },\n        { text: 'Bubble', value: 'bubble' },\n        { text: 'Bullet', value: 'bullet' },\n        { text: 'Column', value: 'column' },\n        { text: 'Column Pyramid', value: 'columnpyramid' },\n        { text: 'Column Range', value: 'columrange' },\n        { text: 'Cylinder', value: 'cylinder' },\n        { text: 'Errorbar', value: 'errorbar' },\n        { text: 'Funnel', value: 'funnel' },\n        { text: 'Gauge', value: 'gauge' },\n        { text: 'Heatmap', value: 'heatmap' },\n        { text: 'Histogram', value: 'histogram' },\n        { text: 'Line Chart', value: 'line' },\n        { text: 'Networkgraph', value: 'networkgraph' },\n        { text: 'Packed Bubble', value: 'packedbubble' },\n        { text: 'Pareto', value: 'pareto' },\n        { text: 'Pie', value: 'pie' },\n        { text: 'Polygon', value: 'polygon' },\n        { text: 'Pyramid', value: 'pyramid' },\n        { text: 'Sankey', value: 'sankey' },\n        { text: 'Scatter Plot', value: 'scatter' },\n        { text: 'Scatter Plot 3D', value: 'scatter3d' },\n        { text: 'Solid Gauge', value: 'solidgauge' },\n        { text: 'Spline', value: 'spline' },\n        { text: 'Streamgraph', value: 'streamgraph' },\n        { text: 'Cunburst', value: 'sunburst' },\n        { text: 'Tilemap', value: 'tilemap' },\n        { text: 'Treemap', value: 'treemap' },\n        { text: 'Variable Pie', value: 'variablepie' },\n        { text: 'Variwide', value: 'variwide' },\n        { text: 'Vector', value: 'vector' },\n        { text: 'Venn Diagram', value: 'venn' },\n        { text: 'Waterfall', value: 'waterfall' },\n        { text: 'Windbarb', value: 'windbarb' },\n        { text: 'Wordcloud', value: 'wordcloud' },\n        { text: 'XRange', value: 'xrange' }\n    ];\n\n    this.$rootScope = $rootScope;\n\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('panel-teardown', this.onPanelTeardown.bind(this));\n    this.events.on('panel-initialized', this.render.bind(this));\n    this.events.on('render', this.onRender.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n\n    this.data = [];\n    this.canvasid = ('id' + (Math.random() * 100000)).replace('.', '');\n    this.divid = ('id' + (Math.random() * 100000)).replace('.', '');\n    this.ctx = null;\n    this.chart = null;\n    this.ready = false;\n\n    this.updateChart();\n  }\n\n  onDataError() {\n    //console.log('Data error');\n    this.series = [];\n    this.render();\n  }\n\n  updateChart() {\n  }\n\n  onRender() {\n    if (this.ctx == null) {\n      if (document.getElementById(this.canvasid) != null) {\n        this.ctx = document.getElementById(this.canvasid).getContext('2d');\n      }\n    }\n    if (!this.chart) {\n        this.chart = Highcharts.chart(this.divid, {\n            chart: {type: this.panel.chart.type, plotBorderWidth: 1,zoomType: 'xy'},\n            legend: { enabled: false },\n            title: (this.panel.labels.title) ? { show: true, text: this.panel.labels.title} : null,\n            subtitle: (this.panel.labels.subtitle) ? { show: true, text: this.panel.labels.subtitle} : null,\n            /*\n            tooltip: {backgroundColor: '#FCFFC5', borderColor: 'black',borderRadius: 10,borderWidth: 3},\n            */\n            tooltip: {\n                useHTML: true,\n                headerFormat: '<table>',\n                pointFormat: '<tr><th colspan=\"2\"><h3>{point.name}</h3></th></tr>' +\n                    '<tr><th>' + (this.panel.fields.x_label || 'X') + ' :</th><td align=\"right\">{point.x}</td></tr>' +\n                    '<tr><th>' + (this.panel.fields.y_label || 'Y') + ' :</th><td align=\"right\">{point.y}</td></tr>' +\n                    '<tr><th>' + (this.panel.fields.name_label || 'Size') + ' :</th><td align=\"right\">{point.z}</td></tr>',\n                footerFormat: '</table>',\n                followPointer: true\n            },\n            yAxis: {title: {text: null}, min:0},\n            xAxis: {title: {text: null}, min:0},\n            //xAxis: (this.panel.x_axis.categories) ? {categories: this.panel.x_axis.categories.split(',')} : {title: {text: null}, min:0},\n            plotOptions: {\n                series: {dataLabels: {enabled: true, format: '{point.name}', animation: {duration: this.panel.chart.animation_duration}}},\n                line: {dataLabels: {enabled: true},enableMouseTracking: false, animation: {duration: this.panel.chart.animation_duration}}\n            },\n            series: (this.panel.chart.type.replace('string:','').trim() === 'bubble') ? [{data: [{ x: 0, y: 0, z: 0, name: '', country: '' }]}] : []\n        });\n    }\n\n    if (this.data) {\n        //Todo - determine setters based on data properties\n        if (this.panel.chart.type.replace('string:','').trim() === 'bubble') {\n            this.chart.series[0].setData(this.data);\n            this.chart.render();\n        } else {\n            while (this.chart.series.length > 0) { this.chart.series[0].remove(false);}\n            for (let i = 0; i < this.data.length; i++) {\n                this.chart.addSeries(this.data[i], false);\n            }\n        }\n    }\n\n    /* If type changed\n    let type = this.panel.chart.type.replace('string:','').trim();\n    this.chart.series.forEach(function(series) {series.update({type: type},false)});\n    */\n\n    this.chart.redraw();\n    //this.updateChart();\n  }\n\n  decodeNonHistoricalData(fulldata) {\n    this.updateChart();\n  }\n\n  //***************************************************\n  // Data received\n  //***************************************************\n  onDataReceived(dataList) {\n      switch(this.panel.chart.type.replace('string:','').trim()) {\n      case 'bubble': {\n          this.bubbleData(dataList);\n          break;\n      }\n      case 'line': {\n          this.chartData(dataList);\n          break;\n      }\n    }\n    this.updateChart();\n    this.render();\n  }\n\n  chartData(dataList) {\n      let new_data = [];\n\n      let series = null;\n      let values = null;\n\n      if (dataList && dataList[0] && dataList[0].columns) {\n          for (let i = 0; i < dataList[0].columns.length; i++) {\n              if (dataList[0].columns[i].text === 'series') series = i;\n\n              if (dataList[0].columns[i].text === 'values') values = i;\n          }\n      }\n\n      if (series != null && values != null) {\n          if (dataList && dataList[0] && dataList[0].rows) {\n              dataList[0].rows.forEach(function(row) {\n                  new_data.push({name: row[series], data: JSON.parse(row[values].replace('(','[').replace(')',']'))});\n              });\n          }\n      }\n\n      if (this.panel.postprocess.accumulate) {\n          for (let i = 0; i < new_data.length; i++) {\n              let newValues = [];\n              let sum = 0;\n              for (let r = 0; r < new_data[i].data.length; r++) {\n                  sum += new_data[i].data[r];\n                  newValues.push(sum);\n              }\n              new_data[i].data = newValues;\n          }\n      }\n      this.data = new_data;\n  }\n\n  bubbleData(dataList) {\n      let new_data = [];\n      if (dataList && dataList[0] && dataList[0].rows) {\n          dataList[0].rows.forEach(function(row) {\n              let entry = {};\n              for (let i = 0; i < dataList[0].columns.length; i++) {\n                  entry[dataList[0].columns[i].text] = row[i] || (dataList[0].columns[i].text === 'name' || dataList[0].columns[i].text === 'details' ? '' : 0);\n              }\n              new_data.push(entry);\n          });\n      }\n      this.data = new_data;\n      try {\n          if (this.chart != null) this.chart.series[0].setData(this.data);\n      } catch (e) {\n          console.log('Error:', e);\n      }\n  }\n\n  onInitEditMode() {\n    //console.log('onInitEditMode');\n    this.addEditorTab('Options', 'public/plugins/sp-highcharts/editor.html', 2);\n  }\n\n  onPanelTeardown() {\n    //console.log('onPanelTeardown');\n    this.$timeout.cancel(this.nextTickPromise);\n  }\n\n}\n\nUdsHighChartsCtrl.templateUrl = 'module.html';"]}